var searchIndex = JSON.parse('{\
"seg_tree":{"doc":"A generic implimentation of a segment tree (or range query …","t":[8,3,11,11,11,11,11,11,10,11,11,11,11,11],"n":["Merge","SegTree","borrow","borrow_mut","from","from","from_iter","into","merge","query","try_from","try_into","type_id","update"],"q":["seg_tree","","","","","","","","","","","","",""],"d":["A trait for defining the operation that should be used …","A data structure for allowing both range queries and point …","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Quickly compute the result of accumulating all elements …","","","","Update the value at a certain index in the sequence …"],"i":[0,0,2,2,2,2,2,2,6,2,2,2,2,2],"f":[0,0,[[]],[[]],[[]],[1,2],[[],2],[[]],[[]],[[2,3,3]],[[],4],[[],4],[[],5],[[2,3]]],"p":[[3,"Vec"],[3,"SegTree"],[15,"usize"],[4,"Result"],[3,"TypeId"],[8,"Merge"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
